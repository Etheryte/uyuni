name: Javascript unit tests

on:
  push:
    branches:
      - master
    paths:
      - 'web/html/src/**'
  pull_request:
    paths:
      - 'web/html/src/**'

jobs:
  javascript_unit_tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
    - name: Get cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Use cache
      uses: actions/cache@v2
      id: yarn-cache
      with:
        # Originally, we didn't cache node_modules, but Yarn cache is almost as slow as fetching from scratch
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
        restore-keys: ${{ runner.os }}-yarn-

    # This step is required even on a cache hit or the cache won't hydrate node_modules.
    # `--prefer-offline` means we prefer the cache over fetching things from the network.
    # See: https://stackoverflow.com/a/62244232/1470607
    - name: Install dependencies
      run: yarn --cwd susemanager-frontend install --frozen-lockfile --prefer-offline

    - name: Run tests
      run: yarn --cwd web/html/src test --no-cache
      env:
        BABEL_ENV: 'test'
